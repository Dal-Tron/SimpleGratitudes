{"version":3,"file":"static/webpack/static/development/pages/index.js.58e272067f531be861ff.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { generateUniqueID } from '../lib/helpers'\n\nimport Head from 'next/head'\nimport Clock from '../components/Clock'\nimport Text from '../components/Text'\n\nclass Index extends Component {\n  state = {\n    time: '',\n    timestamp: '',\n    quotes: [\n      { \"author-1\": \"This is the first quote.\" },\n      { \"author-2\": \"This is the second quote.\" }\n    ],\n    gratitudes: {\n      \"gratitude-0\": \"\"\n    },\n    visions: {\n      \"vision-0\": \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.handleCreateTimeString()\n    this.timer = setInterval(() => this.handleCreateTimeString(), 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  handleCreateTimeString() {\n    const timestamp = new Date(Date.now()).toTimeString()\n    const H = timestamp.substr(0, 2)\n    const h = H % 12 || 12\n    const ampm = (H < 12 || H === 24) ? \" AM\" : \" PM\"\n    const time = h + timestamp.substr(2, 3) + ampm\n    this.setState({\n      time,\n      timestamp\n    })\n  }\n\n  handleAddGratitude = () => {\n    const gratitudeID = `gratitude-${generateUniqueID()}`\n    let gratitude = {}\n    gratitude[gratitudeID] = \"\"\n    const gratitudes = Object.assign({}, this.state.gratitudes, gratitude)\n    this.setState({\n      gratitudes\n    })\n  }\n\n  handleAddVision = () => {\n    const visionID = `vision-${generateUniqueID()}`\n    let vision = {}\n    vision[visionID] = \"\"\n    const visions = Object.assign({}, this.state.visions, vision)\n    this.setState({\n      visions\n    })\n  }\n\n  handleRemoveGratitude = key => {\n    if (key !== \"gratitude-0\") {\n      const { gratitudes } = this.state\n      delete gratitudes[key]\n      this.setState({\n        gratitudes\n      })\n    }\n  }\n\n  handleRemoveVision = key => {\n    if (key !== \"vision-0\") {\n      const { visions } = this.state\n      delete visions[key]\n      this.setState({\n        visions\n      })\n    }\n  }\n\n  handleSaveGratitude = e => {\n    const { gratitudes } = this.state\n    const id = e.target.id\n    const gratitudeText = e.target.value\n    gratitudes[id] = gratitudeText\n    this.setState({\n      gratitudes\n    })\n  }\n\n  handleSaveVision = e => {\n    const { visions } = this.state\n    const id = e.target.id\n    const visionText = e.target.value\n    visions[id] = visionText\n    this.setState({\n      visions\n    })\n  }\n\n  render() {\n    const gratitudes = Object.keys(this.state.gratitudes).map((key, index) => <Text\n      key={index}\n      id={key}\n      text={this.state.gratitudes[key]}\n      handleRemoveText={() => this.handleRemoveGratitude(key)}\n      handleSaveText={this.handleSaveGratitude}\n      rows=\"3\"\n      label=\"Gratitude\"\n    />\n    )\n    const visions = Object.keys(this.state.visions).map((key, index) => <Text\n      key={index}\n      id={key}\n      text={this.state.visions[key]}\n      handleRemoveText={() => this.handleRemoveVision(key)}\n      handleSaveText={this.handleSaveVision}\n      rows=\"3\"\n      label=\"Vision\"\n    />\n    )\n    return (\n      <div className=\"page-wrapper\">\n        <Head>\n          <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        </Head>\n        <section className=\"headspace\">\n          <div className=\"intention absCenter\">\n            <div className=\"grateful\">Grateful</div>\n            <div className=\"vision\">Vision</div>\n          </div>\n        </section>\n        <section className=\"time\">\n          <Clock time={this.state.time} />\n        </section>\n        <section className=\"quotes\">\n          <div className=\"quotes-container\">\n            <div className=\"absCenter quote-text\">\n              This is the text for the quote. And it is very long. And it goes on for a few lines.\n            </div>\n          </div>\n        </section>\n        <section className=\"buttons\">\n        </section>\n        <section className=\"gratitudes\">\n          {gratitudes}\n          <div onClick={this.handleAddGratitude} className=\"dotted-text\">+ Gratitude</div>\n        </section>\n        <section className=\"visions\">\n          {visions}\n          <div onClick={this.handleAddVision} className=\"dotted-text\">+ Vision</div>\n        </section>\n        <section className=\"footer\">\n          <div className=\"dotted-text\">Upload</div>\n          <div className=\"dotted-text\">Download</div>\n          <div className=\"dotted-text\">Donate</div>\n        </section>\n        <style jsx global>{`\n      @font-face {\n        font-family: ZillaSlab;\n        src: url(\"/static/fonts/ZillaSlab.ttf\") format(\"truetype\");\n      }\n      @font-face {\n        font-family: CodyStarLight;\n        src: url(\"/static/fonts/CodyStar-Light.ttf\") format(\"truetype\");\n      }\n      @font-face {\n        font-family: Righteous;\n        src: url(\"/static/fonts/Righteous.ttf\") format(\"truetype\");\n      }\n      @font-face {\n        font-family: Snippet;\n        src: url(\"/static/fonts/Snippet.ttf\") format(\"truetype\");\n      }\n      * {\n        box-sizing: border-box;\n      }\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        overflow: scroll;\n        margin-bottom: 6rem;\n        background: lightgrey;\n      }\n      .absCenter {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      .inline {\n        display: inline-block;\n      }\n      .dotted-text {\n        text-align: center;\n        padding: 2rem;\n        font-family: CodyStarLight, Sans-Serif, Arial;\n        color: white;\n        font-size: 1.5rem;\n      }\n      .headspace {\n        height: 10vh;\n        background: lightgrey;\n        position: relative;\n      }\n      .intention {\n        font-size: 2rem;\n        color: white;\n        text-align: center;\n      }\n      .quotes {\n        background: lightblue;\n      }\n      .quotes-container {\n        height: 15vh;\n        position: relative;\n        color: white;\n        font-family: Righteous, Sans-Serif, Arial;\n        letter-spacing: 1px;\n        font-size: 1.5rem;\n      }\n      .quote-text {\n        padding: 2rem;\n        border-left: 5px solid lightgrey;\n      }\n      .grateful {\n        font-family: Righteous, Sans-Serif, Arial;\n      }\n      .vision {\n        font-family: Snippet, Sans-Serif, Arial;\n      }\n      .time {\n        background: grey;\n      }\n      .gratitudes {\n        background: lightblue;\n      }\n      .visions {\n        background: lightgrey;\n      }\n      .footer {\n        background: grey;\n        position: fixed;\n        bottom: 0;\n        width: 100%;\n        height: 6rem;\n      }\n    `}</style>\n      </div>\n    )\n  }\n}\n\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAVA;AACA;AAmCA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AAhFA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AA8DA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjCA;AAAA;AAAA;AAiIA;;;;AAxPA;AACA;AA0PA;;;;A","sourceRoot":""}