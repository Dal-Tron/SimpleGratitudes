{"version":3,"file":"static/webpack/static/development/pages/index.js.35d5abc13b9b61c7a72b.hot-update.js","sources":["webpack:///./components/vision.js","webpack:///./pages/index.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Vision = props => {\n  return (\n    <div className=\"gratitude-container\">\n      <div htmlFor={`gratitude-` + props.id} className=\"gratitude-input-wrapper\">\n        <input\n          className=\"gratitude-input\"\n          type=\"text\"\n          id={props.id}\n          placeholder=\"&nbsp;\"\n          value={props.gratitude}\n          onChange={props.handleSaveGratitude}\n        />\n        <span className=\"gratitude-label\">Label</span>\n        <span className=\"gratitude-label-text-border\"></span>\n        <span className=\"close-gratitude\" onClick={props.handleRemoveGratitude}>\n          {props.id === 'gratitude-0' ? null : <FontAwesomeIcon icon=\"times-circle\" />}\n        </span>\n      </div>\n      <style jsx>{`\n        .gratitude-container {\n          padding-top: 2rem;\n        }\n        .gratitude-input-wrapper {\n          position: relative;\n          margin: 0 auto;\n          width: 100%;\n          max-width: 380px;\n        }\n        .gratitude-input-wrapper .gratitude-label {\n          position: absolute;\n          top: 16px;\n          left: .5rem;\n          font-size: 16px;\n          color: #9098a9;\n          font-weight: 500;\n          transform-origin: 0 0;\n          transition: all 0.2s ease;\n          font-family: sans-serif;\n        }\n        .gratitude-input-wrapper .gratitude-label-text-border {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          height: 2px;\n          width: 100%;\n          background: #07f;\n          transform: scaleX(0);\n          transform-origin: 0 0;\n          transition: all 0.15s ease;\n        }\n        .gratitude-input-wrapper .gratitude-input {\n          -webkit-appearance: none;\n          width: 100%;\n          border: 0;\n          padding: 1.2rem 2rem 1.2rem .5rem;\n          height: 48px;\n          font-size: 26px;\n          font-weight: 500;\n          border-bottom: 2px solid #c8ccd4;\n          background: none;\n          border-radius: 0;\n          color: #223254;\n          transition: all 0.15s ease;\n        }\n        .gratitude-input-wrapper .gratitude-input:hover {\n          background: rgba(34,50,84,0.03);\n        }\n        .gratitude-input-wrapper .gratitude-input:not(:placeholder-shown) + span {\n          color: #5a667f;\n          transform: translateY(-26px) scale(0.75);\n        }\n        .gratitude-input-wrapper .gratitude-input:focus {\n          background: none;\n          outline: none;\n        }\n        .gratitude-input-wrapper .gratitude-input:focus + span {\n          color: #07f;\n          transform: translateY(-26px) scale(0.75);\n        }\n        .gratitude-input-wrapper .gratitude-input:focus + span + .gratitude-label-text-border {\n          transform: scaleX(1);\n        }\n        .close-gratitude {\n          position: absolute;\n          top: 1rem;\n          right: .5rem;\n          color: #adb5bd;\n        }\n        .close-gratitude:hover {\n          color: #ff6b6b;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default Vision","import React, { Component } from 'react'\nimport { generateUniqueID } from '../lib/helpers'\n\nimport Head from 'next/head'\nimport Clock from '../components/clock'\nimport Gratitude from '../components/gratitude'\nimport Vision from '../components/vision'\n\nclass Index extends Component {\n  state = {\n    time: '',\n    gratitudes: {\n      \"gratitude-0\": \"\"\n    },\n    vision: \"\"\n  }\n\n  componentDidMount() {\n    this.handleCreateTimeString()\n    this.timer = setInterval(() => this.handleCreateTimeString(), 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  handleCreateTimeString() {\n    const time = new Date(Date.now()).toTimeString()\n    const H = time.substr(0, 2)\n    const h = H % 12 || 12\n    const ampm = (H < 12 || H === 24) ? \" AM\" : \" PM\"\n    const timestring = h + time.substr(2, 3) + ampm\n    this.setState({ time: timestring })\n  }\n\n  handleAddGratitude = () => {\n    const gratitudeID = `gratitude-${generateUniqueID()}`\n    let gratitude = {}\n    gratitude[gratitudeID] = \"\"\n    const gratitudes = Object.assign({}, this.state.gratitudes, gratitude)\n    this.setState({\n      gratitudes\n    })\n  }\n\n  handleRemoveGratitude = key => {\n    if (key !== \"gratitude-0\") {\n      const { gratitudes } = this.state\n      delete gratitudes[key]\n      this.setState({\n        gratitudes\n      })\n    }\n  }\n\n  handleSaveGratitude = e => {\n    const { gratitudes } = this.state\n    const id = e.target.id\n    const gratitudeText = e.target.value\n    gratitudes[id] = gratitudeText\n    this.setState({\n      gratitudes\n    })\n  }\n\n  render() {\n    const gratitudes = Object.keys(this.state.gratitudes).map((key, index) => <Gratitude\n      key={index}\n      id={key}\n      gratitude={this.state.gratitudes[key]}\n      handleRemoveGratitude={() => this.handleRemoveGratitude(key)}\n      handleSaveGratitude={this.handleSaveGratitude}\n    />\n    )\n    return (\n      <div className=\"page-wrapper\">\n        <Head>\n          <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        </Head>\n        <section className=\"headspace\">\n          <div className=\"intention absCenter\">\n            <div className=\"grateful\">Grateful</div>\n            <div className=\"vision\">Vision</div>\n          </div>\n        </section>\n        <section className=\"time\">\n          <Clock time={this.state.time} />\n        </section>\n        <section className=\"buttons\">\n        </section>\n        <section className=\"gratitudes\">\n          {gratitudes}\n          <div onClick={this.handleAddGratitude} className=\"add-gratitude\">+ Gratitude</div>\n        </section>\n        <section className=\"vision\">\n          <Vision />\n        </section>\n        <style jsx global>{`\n      @font-face {\n        font-family: ZillaSlab;\n        src: url(\"/static/fonts/ZillaSlab.ttf\") format(\"truetype\");\n      }\n      @font-face {\n        font-family: CodyStarLight;\n        src: url(\"/static/fonts/CodyStar-Light.ttf\") format(\"truetype\");\n      }\n      @font-face {\n        font-family: Righteous;\n        src: url(\"/static/fonts/Righteous.ttf\") format(\"truetype\");\n      }\n      @font-face {\n        font-family: Snippet;\n        src: url(\"/static/fonts/Snippet.ttf\") format(\"truetype\");\n      }\n      * {\n        box-sizing: border-box;\n      }\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        overflow: scroll;\n      }\n      .absCenter {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      .headspace {\n        height: 10rem;\n        background: lightgrey;\n        position: relative;\n      }\n      .intention {\n        font-family: ZillaSlab, Arial;\n        font-size: 2rem;\n        color: white;\n        text-align: center;\n      }\n      .grateful {\n        font-family: Righteous, Sans-Serif, Arial;\n      }\n      .vision {\n        font-family: Snippet, Sans-Serif, Arial;\n      }\n      .time {\n        position: relative;\n        height: 10rem;\n        background: lightblue;\n      }\n      .gratitudes {\n        position: relative;\n        background: lightgrey;\n        width: 50%;\n      }\n      .add-gratitude {\n        text-align: center;\n        margin: 2rem;\n        font-family: CodyStarLight, Arial;\n        color: white;\n        font-size: 1.5rem;\n      }\n    `}</style>\n      </div>\n    )\n  }\n}\n\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AA4FA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;AAyBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AA/CA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAgpBA;AAAA;AAAA;AA2FA;;;;AA9JA;AACA;AAgKA;;;;A","sourceRoot":""}