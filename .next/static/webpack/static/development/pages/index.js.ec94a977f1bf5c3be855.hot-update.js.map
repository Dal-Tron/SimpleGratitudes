{"version":3,"file":"static/webpack/static/development/pages/index.js.ec94a977f1bf5c3be855.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addGratitude, removeGratitude, updateGratitude } from '../store'\nimport { generateUniqueID } from '../lib/helpers'\n\nimport Head from 'next/head'\nimport Clock from '../components/clock'\nimport Gratitude from '../components/gratitude'\n\nclass Index extends Component {\n  state = {\n    time: '',\n    gratitudes: {\n      \"gratitude-0\": \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.handleCreateTimeString()\n    this.timer = setInterval(() => this.handleCreateTimeString(), 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  handleCreateTimeString() {\n    const time = new Date(Date.now()).toTimeString()\n    const H = time.substr(0, 2)\n    const h = H % 12 || 12\n    const ampm = (H < 12 || H === 24) ? \" AM\" : \" PM\"\n    const timestring = h + time.substr(2, 3) + ampm\n    this.setState({ time: timestring })\n  }\n\n  handleAddGratitude = () => {\n    let gratitude = {},\n      gratitudeID = `gratitude-${generateUniqueID()}`\n    gratitude[gratitudeID] = \"\"\n    let newGratitudes = Object.assign({}, this.state.gratitudes, gratitude)\n    this.setState({\n      gratitudes: newGratitudes\n    })\n  }\n\n  handleRemoveGratitude = key => {\n    if (key !== \"gratitude-0\") {\n      const gratitudes = this.state.gratitudes\n      delete gratitudes[key]\n      this.setState({\n        gratitudes\n      })\n    }\n  }\n\n  handleSaveGratitude = e => {\n    let id = e.target.id\n    let gratitudeText = e.target.value\n    this.props.updateGratitude({ id, gratitudeText })\n  }\n\n  render() {\n    // if (this.props.gratitudes) {\n    //   gratitudes = Object.keys(this.props.gratitudes).map((key, index) => {\n    //     return <Gratitude\n    //       key={index}\n    //       id={key}\n    //       gratitude={this.props.gratitudes[key]}\n    //       handleRemoveGratitude={() => this.handleRemoveGratitude(key)}\n    //       handleSaveGratitude={this.handleSaveGratitude}\n    //     />\n    //   })\n    // }\n\n    let gratitudes = Object.keys(this.state.gratitudes).map((key, index) => {\n      return <Gratitude\n        key={index}\n        id={key}\n        gratitude={this.props.gratitudes[key]}\n        handleRemoveGratitude={() => this.handleRemoveGratitude(key)}\n        handleSaveGratitude={this.handleSaveGratitude}\n      />\n    })\n    return (\n      <div className=\"page-wrapper\">\n        <Head>\n          <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        </Head>\n        <section className=\"headspace\">\n          <div className=\"intention absCenter\">Gratitude Today</div>\n        </section>\n        <section className=\"time\">\n          <Clock time={this.state.time} />\n        </section>\n        <section className=\"buttons\">\n        </section>\n        <section className=\"gratitudes\">\n          {gratitudes}\n          <div onClick={this.handleAddGratitude} className=\"add-gratitude\">+ Gratitude</div>\n        </section>\n        <section className=\"vision\" />\n        <style jsx global>{`\n      @font-face {\n        font-family: ZillaSlab;\n        src: url(\"/static/fonts/ZillaSlab.ttf\") format(\"truetype\");\n      }\n      @font-face {\n        font-family: CodyStarLight;\n        src: url(\"/static/fonts/CodyStar-Light.ttf\") format(\"truetype\");\n      }\n      * {\n        box-sizing: border-box;\n      }\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        overflow: scroll;\n      }\n      .absCenter {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      .headspace {\n        height: 10rem;\n        background: lightgrey;\n        position: relative;\n      }\n      .intention {\n        font-family: ZillaSlab, Arial;\n        font-size: 2rem;\n        color: white;\n      }\n      .time {\n        position: relative;\n        height: 10rem;\n        background: lightblue;\n      }\n      .gratitudes {\n        position: relative;\n        background: lightgrey;\n      }\n      .add-gratitude {\n        text-align: center;\n        margin: 2rem;\n        font-family: CodyStarLight, Arial;\n        color: white;\n        font-size: 1.5rem;\n      }\n    `}</style>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { gratitudes } = state\n  return { gratitudes }\n}\nconst mapDispatchToProps = {\n  addGratitude,\n  removeGratitude,\n  updateGratitude\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AADA;AAFA;AACA;AAwBA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AA3CA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AA4BA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAsEA;;;;AAjJA;AACA;AAmJA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;;;A","sourceRoot":""}